from functools import cached_property
from typing import Any, Mapping

from bs4 import BeautifulSoup
from requests import Response

from .session import GuestSession
from .threadable import threadable
from .works import Work

class User:
    username: str
    _session: GuestSession | None
    _soup_works: BeautifulSoup | None
    _soup_profile: BeautifulSoup | None
    _soup_bookmarks: BeautifulSoup | None
    _works: list[Work] | None
    _bookmarks: list[Work] | None
    _authenticity_token: str | None
    def __init__(self, username: str, session: GuestSession | None = ..., load: bool = ...) -> None: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other: object) -> bool: ...
    def __getstate__(self) -> dict[str, Any]: ...
    def __setstate__(self, d: Mapping[str, Any]) -> None: ...
    def set_session(self, session: GuestSession) -> None: ...
    @threadable
    def reload(self) -> None: ...
    def get_avatar(self) -> tuple[str, bytes]: ...
    @threadable
    def subscribe(self) -> None: ...
    @threadable
    def unsubscribe(self) -> None: ...
    @property
    def id(self) -> int | None: ...
    @cached_property
    def is_subscribed(self) -> bool: ...
    @property
    def loaded(self) -> bool: ...
    @property
    def authenticity_token(self) -> str | None: ...
    @cached_property
    def user_id(self) -> int: ...
    @cached_property
    def _sub_id(self) -> int: ...
    @cached_property
    def works(self) -> int: ...
    @cached_property
    def _works_pages(self) -> int: ...
    def get_works(self, use_threading: bool = ...) -> list[Work]: ...
    @threadable
    def load_works_threaded(self) -> None: ...
    @threadable
    def _load_works(self, page: int = ...) -> None: ...
    @cached_property
    def bookmarks(self) -> int: ...
    @cached_property
    def _bookmarks_pages(self) -> int: ...
    def get_bookmarks(self, use_threading: bool = ...) -> list[Work]: ...
    @threadable
    def load_bookmarks_threaded(self) -> None: ...
    @threadable
    def _load_bookmarks(self, page: int = ...) -> None: ...
    @cached_property
    def bio(self) -> str: ...
    @cached_property
    def url(self) -> str: ...
    def get(self, *args: Any, **kwargs: Any) -> Response: ...
    def request(self, url: str) -> BeautifulSoup: ...
    @staticmethod
    def str_format(string: str) -> str: ...
    @property
    def work_pages(self) -> int: ...
